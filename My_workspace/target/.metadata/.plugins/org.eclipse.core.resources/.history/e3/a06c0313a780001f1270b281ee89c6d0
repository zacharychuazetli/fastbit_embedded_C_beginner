/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

int main(void)
{
	uint32_t *pClkCtrlReg = (uint32_t*)0x40023830;
	uint32_t *pPortDModeReg = (uint32_t*)0x40020C00;
	uint32_t *pPortDOutReg = (uint32_t*)0x40020C14;

	//1. enable the clock for GPIOD peripheral in the AHB1ENR
	uint32_t temp = *pClkCtrlReg; //read
	temp = temp | 0x08; //modify
	*pClkCtrlReg = temp; //write back
	//can shortcut to
	//*pClkCtrlReg = *pClkCtrlReg | 0x08;
	// or even *pClkCtrlReg |= 0x08;
	// using bit shift method
	// set 3rd bit position
	// *pClkCtrlReg |= (1 << 3);


	//2. configure the mode of the IO pin as output
	//a. clear the 24th and 25th bit positions (clear)
	*pPortDModeReg &= 0xFCFFFFFF;
	//b. make 24th bit position as 1 (set)
	*pPortDModeReg |= 0x01000000;
	// using bit shift method, clear the 24th and 25 bit position
	// *pPortDModeReg &= ~(1 << 24);
	// *pPortDModeReg &= ~(1 << 25); or can just combine both and do // *pPortDModeReg &= ~(3 << 24);
	// its like pushing 11 to the 24 and 25 bit position, and 11 is just 3
	// then make 24 bit as 1 (set)
	// *pPortDModeReg |= (1 << 24);

	//3. set 12th bit of the output data register to make I/O pin-12 high
	*pPortDOutReg |= 0x1000;
	// using bit shift method
	// set 12 bit
	// *pPortDOutReg |= 0x1000

	while(1);
}
